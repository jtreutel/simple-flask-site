version: 2.1

orbs:
  python: circleci/python@1.3.2
  aws-ecr: circleci/aws-ecr@6.13.0
  aws-ecs: circleci/aws-ecs@1.3.0

jobs:
  checkout-code:
    docker:
      - image: cimg/python:3.9.0
    steps:
      - checkout
      #- python/install-packages:
      #    cache-version: v3
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/project #default working dir
  static-analysis:
    docker:
      - image: cimg/python:3.9.0
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      #- python/install-packages:
      #    cache-version: v3      
      - run: |
          pip install flask pytest pytest-flask pylint
          cd ./src
          pylint ./site.py
  run-tests:
    docker:
      - image: cimg/python:3.9.0
    steps:
      - restore_cache:
          keys:
            - v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      #- python/install-packages:
      #    cache-version: v3   
      - run: 
          name: Install Chrome 86 and Chromedriver 86
          command: |
            wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
            sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
            sudo apt-get update
            sudo apt-get install google-chrome-stable
            wget https://chromedriver.storage.googleapis.com/88.0.4324.96/chromedriver_linux64.zip
            unzip ./chromedriver_linux64.zip
            sudo mv chromedriver /usr/local/bin/
      - run:
          name: Test website functionality
          command: | 
            pip install flask pytest pytest-flask selenium chromedriver
            nohup python src/site.py > site.log 2>&1 &
            python -m pytest

workflows:
  main:
    jobs:
      - checkout-code
      - static-analysis:
          requires:
            - checkout-code
      - run-tests:
          requires:
            - checkout-code
      - manual-approval:
          type: approval
          requires:
            - static-analysis
            - run-tests
      - aws-ecr/build-and-push-image:
          repo: "${AWS_RESOURCE_NAME_PREFIX}"
          tag: "${CIRCLE_SHA1}"
          requires:
            - manual-approval
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image # only run this job once aws-ecr/build-and-push-image has completed
          family: "${AWS_RESOURCE_NAME_PREFIX}-service"
          cluster-name: "${AWS_RESOURCE_NAME_PREFIX}-cluster"
          container-image-name-updates: "container=${AWS_RESOURCE_NAME_PREFIX}-service,tag=${CIRCLE_SHA1}"